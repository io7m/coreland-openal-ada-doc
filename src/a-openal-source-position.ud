(section
  (ref "openal_source_get_position_f")
  (ref "openal_source_get_position_fv")
  (ref "openal_source_get_position_i")
  (ref "openal_source_get_position_iv")
  (ref "openal_source_set_position_i")
  (ref "openal_source_set_position_iv")
  (ref "openal_source_set_position_f")
  (ref "openal_source_set_position_fv")
 
  (title "OpenAL.Source.Position")
  (para procedure_desc "Set/Get source position.")
  (subsection
    (title "Synopsis")
    (para-verbatim procedure_synopsis
"with OpenAL.Source;
with OpenAL.Types;

procedure Set_Position_f
  (Source    : in Source_ID_t;
   X         : in Types.Float_t;
   Y         : in Types.Float_t;
   Z         : in Types.Float_t);

procedure Set_Position_i
  (Source    : in Source_ID_t;
   X         : in Types.Integer_t;
   Y         : in Types.Integer_t;
   Z         : in Types.Integer_t);

procedure Set_Position_fv
  (Source    : in Source_ID_t;
   Position  : in Types.Vector_3f_t);

procedure Set_Position_iv
  (Source    : in Source_ID_t;
   Position  : in Types.Vector_3i_t);

procedure Get_Position_f
  (Source : in     Source_ID_t;
   X      :    out Types.Float_t;
   Y      :    out Types.Float_t;
   Z      :    out Types.Float_t);

procedure Get_Position_i
  (Source : in     Source_ID_t;
   X      :    out Types.Integer_t;
   Y      :    out Types.Integer_t;
   Z      :    out Types.Integer_t);

procedure Get_Position_fv
  (Source   : in     Source_ID_t;
   Position :    out Types.Vector_3f_t);

procedure Get_Position_iv
  (Source   : in     Source_ID_t;
   Position :    out Types.Vector_3i_t);
"))
  (subsection
    (title "Description")
    (para
      "The " (item ada_procedure "Get_Position") " procedures
      retrieve the position of the source.")
    (para
      "The " (item ada_procedure "Set_Position") " procedures
      set the position of the source."))
  (subsection
    (title "Mapping")
    (para
      "The " (item ada_subprogram "Get_Position") " subprograms are
      equivalent to " (item c_function "alGetSource") " with "
      (item constant "AL_POSITION") " passed as the attribute
      parameter.")
    (para
      "The " (item ada_subprogram "Set_Position") " subprograms are
      equivalent to " (item c_function "alSource") " with "
      (item constant "AL_POSITION") " passed as the attribute
      parameter.")))
